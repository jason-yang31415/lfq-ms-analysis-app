(this["webpackJsonplfq-app"]=this["webpackJsonplfq-app"]||[]).push([[0],{1297:function(e,t){},1806:function(e,t){},1830:function(e,t,n){},1831:function(e,t,n){},1832:function(e,t,n){},1836:function(e,t,n){},2076:function(e,t,n){},2077:function(e,t,n){},2078:function(e,t,n){},2084:function(e,t,n){"use strict";n.r(t);var i=n(7),a=n(0),s=n.n(a),c=n(23),r=n.n(c),o=(n(987),n(988),n(989),n(990),n(55)),l=n(24);var u=n(399),d=Object(u.b)(new function(){return new Worker(n.p+"static/js/worker.e4a537d2.worker.js")}),p="SET_INPUT_SAMPLES",b="SET_INPUT_CONDITIONS",O="SET_INPUT_COMPARISONS",f="SET_VIEW_FIGURE_OPTIONS",j="APPEND_REPL_LOG";function h(e,t){return{type:e,data:t}}n(995);var m=n(75),v=n(46),g=n(170),x=n(963),_={input:{samples:[],conditions:[]},view:{figureOptions:{}},side:{},main:{},repl:[]};function y(e,t){switch(t.type){case p:return Object.assign({},e,{samples:t.data});case b:return Object.assign({},e,{conditions:t.data});case O:return Object.assign({},e,{comparisons:t.data})}return e}function N(e,t){switch(t.type){case f:return Object.assign({},e,{figureOptions:t.data})}return e}function S(e,t){switch(t.type){case j:var n=e.length;return[].concat(Object(v.a)(e),[Object(m.a)({index:n},t.data)])}return e}var T="undefined"!==typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||g.c,M=Object(g.d)((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:_,t=arguments.length>1?arguments[1]:void 0,n=Object(m.a)({},e);switch(t.type){case p:case b:case O:n.input=y(e.input,t);break;case f:n.view=N(e.view,t);break;case j:n.repl=S(e.repl,t)}return n}),T(Object(g.a)(x.a))),I=null;var w=window.loadPyodide({indexURL:"https://cdn.jsdelivr.net/pyodide/v0.17.0/full/"}).then((function(e){I=e})).then((function(){return A().loadPackage(["matplotlib","pandas","numpy","scipy","statsmodels"])})).then((function(){return A().runPythonAsync('\nimport micropip\n\nawait micropip.install("/lfq-ms-analysis-app/python/proteomics_analysis-0.0.2-py3-none-any.whl")\nimport proteomics\nimport proteomics.plotting\nlfq_col = proteomics.util.lfq_col\n\nimport numpy as np\n            ')})).then((function(){var e={get:function(e){return L(e,!0)}};return A().registerJsModule("analysis_thread",e),A().runPythonAsync("\nimport pickle\nfrom analysis_thread import get\n\ndef get_from_analysis(name):\n    # get a variable from the analysis thread by pickling it on the analysis \n    # thread, transferring bytes to the plotting thread, and unpickling it\n    x = await get(name)\n    return pickle.loads(memoryview(bytes(x.to_py())))\n            ")}));function A(){return I}function k(e){return w.then((function(){return A().runPythonAsync(e)})).then((function(t){C("figure",e,t?t.toString():null,null)})).catch((function(t){C("figure",e,null,t?t.toString():null)}))}function E(e,t,n){return n&&(t=Object(u.a)(t,n)),d.asyncRun(e,t).then((function(t){var n=t.results,i=t.error;return C("worker",e,n,i)}))}function L(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return d.get(e,t)}function C(e,t,n,i){M.dispatch(h(j,{context:e,code:t.trim(),results:n,error:i}))}var P=n(171),F=n.n(P),U=n(294),R=n(190),D=n(43),H=n(379),V=n(380),Q=n(151),z=n(97),q=n.n(z);function G(e,t){var n=q()(e).mean(),i=q()(t).mean(),a=q()(e).stdev(!0),s=q()(t).stdev(!0),c=Math.sqrt(Math.pow(a,2)/e.length+Math.pow(s,2)/t.length),r=Math.floor(Math.pow(Math.pow(a,2)/e.length+Math.pow(s,2)/t.length,2)/(Math.pow(a,4)/(Math.pow(e.length,2)*(e.length-1))+Math.pow(s,4)/(Math.pow(t.length,2)*(t.length-1)))),o=(i-n)/c;return{t:o,p:2*q.a.studentt.cdf(-Math.abs(o),r),df:r}}function $(e){for(var t=e.map((function(e,t){return{index:t,p:e}})).sort((function(e,t){return e.p-t.p})),n=t.length-1;n>=0;n--)t[n].padj=Math.min(1,Math.min(t.length*t[n].p/(n+1),n<t.length-1?t[n+1].padj:1));return t.sort((function(e,t){return e.index-t.index})).map((function(e){return e.padj}))}var K=n(565),B=n.n(K),J=n(198);function Y(e,t){return new Q.a({columns:Object(m.a)(Object(m.a)({},ee.COMMON_COLUMNS.reduce((function(t,n){return Object.assign(t,Object(D.a)({},n,e.getSeries(n)))}),{})),t.reduce((function(t,n){var i=e.getSeries("LFQ intensity ".concat(n)).where((function(e){return!Number.isNaN(e)})).bake(),a=i.average(),s=i.std();return t["LFQ intensity ".concat(n)]=e.getSeries("LFQ intensity ".concat(n)).select((function(e){return Number.isNaN(e)?B.a.uniform(a-3*s,a-2*s)():e})),t}),{})),index:e.getIndex()}).bake()}function X(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,i=new Map,a=function(t,n){if(i.has(Object(J.a)(t,n)))return i.get(Object(J.a)(t,n));var a=e.getSeries("LFQ intensity ".concat(t)).toArray(),s=e.getSeries("LFQ intensity ".concat(n)).toArray(),c=Object(v.a)(Array(a.length).keys()).map((function(e){return!isNaN(a[e])&&!isNaN(s[e])})),r=q.a.corrcoeff(a.filter((function(e,t){return c[t]})),s.filter((function(e,t){return c[t]})));return r=Math.max(isNaN(r)?0:r,.1),i.set(Object(J.a)(t,n),r),r},s=new Map,c=function(t,n){if(s.has(Object(J.a)(t,n)))return s.get(Object(J.a)(t,n));var i=e.getSeries("LFQ intensity ".concat(t)).toArray(),a=e.getSeries("LFQ intensity ".concat(n)).toArray(),c=q()(Object(v.a)(Array(i.length).keys()).filter((function(e){return!isNaN(i[e])&&!isNaN(a[e])})).map((function(e){return(i[e]-a[e])/((i[e]+a[e])/2)}))),r={mean:c.mean(),std:c.stdev()};return s.set(Object(J.a)(t,n),r),r},r=t.sort((function(t,n){return e.getSeries("LFQ intensity ".concat(t)).select((function(e){return isNaN(e)?1:0})).sum()-e.getSeries("LFQ intensity ".concat(n)).select((function(e){return isNaN(e)?1:0})).sum()})),o=e.select((function(e){var i;if(Object.values(e).map((function(e){return isNaN(e)?0:1})).reduce((function(e,t){return e+t}))<n)return e;var s,o=Object(R.a)(r);try{for(o.s();!(s=o.n()).done;){var l=s.value;if(!isNaN(e["LFQ intensity ".concat(l)])){i=l;break}}}catch(d){o.e(d)}finally{o.f()}var u=q()(t.filter((function(t){return t!==i&&isNaN(e["LFQ intensity ".concat(t)])})).map((function(e){return a(e,i)}))).mean();return t.reduce((function(t,n){var a=e["LFQ intensity ".concat(n)];if(isNaN(a)){var s=c(n,i),r=s.mean,o=s.std,l=B.a.normal(r,o/(Math.sqrt(2)*u))();t["LFQ intensity ".concat(n)]=e["LFQ intensity ".concat(i)]*Math.abs(1+l)}else t["LFQ intensity ".concat(n)]=a;return t}),{})})).bake(),l=Y(e,t).subset(t.map((function(e){return"LFQ intensity ".concat(e)})));return o.zip(l,(function(e,t){return Object.values(e).every((function(e){return!isNaN(e)}))?e:t})).bake()}function Z(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,i={};return t.forEach((function(t,a,s){var c,r=X(e.subset(t.map((function(e){return"LFQ intensity ".concat(e)}))),t,n),o=Object(R.a)(r.getColumns());try{for(o.s();!(c=o.n()).done;){var l=c.value;i[l.name]=l.series}}catch(u){o.e(u)}finally{o.f()}})),new Q.a({columns:Object(m.a)(Object(m.a)({},ee.COMMON_COLUMNS.reduce((function(t,n){return Object.assign(t,Object(D.a)({},n,e.getSeries(n)))}),{})),i),index:e.getIndex()}).bake()}var W=function(){function e(t,n){Object(H.a)(this,e),this.data=t,this.rawData=t,this.samples=n,this.snapshots=new Map,this.replicates=new Map,this.comparisons=new Map,this.removeContaminants=this.removeContaminants.bind(this),this.logTransform=this.logTransform.bind(this),this.removeAllNaN=this.removeAllNaN.bind(this),this.setReplicates=this.setReplicates.bind(this)}return Object(V.a)(e,[{key:"resetToSnapshot",value:function(e){this.snapshots.has(e)&&(this.data=this.snapshots.get(e))}},{key:"removeContaminants",value:function(){console.log("removing contaminants"),this.data=this.data.where((function(e){return!e["Potential contaminant"]&&!e.Reverse})).subset([].concat(Object(v.a)(e.COMMON_COLUMNS),Object(v.a)(this.samples.map((function(e){return"LFQ intensity ".concat(e)}))))).bake(),this.snapshots.set(e.SNAPSHOT_KEYS.REMOVE_CONTAMINANTS,this.data)}},{key:"logTransform",value:function(){var t=this;console.log("log transforming"),this.data=new Q.a({columns:Object(m.a)(Object(m.a)({},e.COMMON_COLUMNS.reduce((function(e,n){return Object.assign(e,Object(D.a)({},n,t.data.getSeries(n)))}),{})),this.samples.reduce((function(e,n){return Object.assign(e,Object(D.a)({},"LFQ intensity ".concat(n),t.data.getSeries("LFQ intensity ".concat(n)).select((function(e){return e>0?Math.log2(e):NaN}))))}),{})),index:this.data.getIndex()}).bake()}},{key:"removeAllNaN",value:function(){var t=this;console.log("removing all NaN"),this.data=this.data.where((function(e){return!t.samples.every((function(t){return isNaN(e["LFQ intensity ".concat(t)])}))})).bake(),this.snapshots.set(e.SNAPSHOT_KEYS.LOG_TRANSFORM,this.data)}},{key:"normalizeMedians",value:function(t){var n=this;if(console.log("normalizing medians"),t){var i=new Map;this.samples.map((function(e){return i.set(e,n.data.getSeries("LFQ intensity ".concat(e)).where((function(e){return!Number.isNaN(e)})).median())}));var a=Math.max.apply(null,Array.from(i.values()));this.data=new Q.a({columns:Object(m.a)(Object(m.a)({},e.COMMON_COLUMNS.reduce((function(e,t){return Object.assign(e,Object(D.a)({},t,n.data.getSeries(t)))}),{})),this.samples.reduce((function(e,t){return Object.assign(e,Object(D.a)({},"LFQ intensity ".concat(t),n.data.getSeries("LFQ intensity ".concat(t)).select((function(e){return e*a/i.get(t)}))))}),{})),index:this.data.getIndex()}).bake(),this.snapshots.set(e.SNAPSHOT_KEYS.MEDIAN_NORMALIZATION,this.data)}else this.snapshots.set(e.SNAPSHOT_KEYS.MEDIAN_NORMALIZATION,this.data)}},{key:"setReplicates",value:function(e){this.replicates.clear();for(var t=0,n=Object.entries(e);t<n.length;t++){var i=Object(l.a)(n[t],2),a=i[0],s=i[1];this.replicates.set(a,s)}}},{key:"imputeMissingValues",value:function(t){switch(console.log("imputing missing values"),t){case e.IMPUTATION_METHODS.METHOD_31:this.data=Y(this.data,this.samples);break;case e.IMPUTATION_METHODS.METHOD_46:this.data=Z(this.data,this.replicates);break;case e.IMPUTATION_METHODS.METHOD_47:this.data=Z(this.data,this.replicates,1)}this.snapshots.set(e.SNAPSHOT_KEYS.IMPUTE_MISSING_VALUES,this.data)}},{key:"makeComparisons",value:function(t){var n=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=i.thresholdP,s=void 0===a?.05:a,c=i.thresholdLogFC,r=void 0===c?1:c,o=i.thresholdReps,u=void 0===o?2:o;console.log("making comparisons");for(var d=function(){var t=Object(l.a)(b[p],2),i=t[0],a=t[1];n.comparisons.has(i)||n.comparisons.set(i,new Map);var c,o=Object(R.a)(a);try{var d=function(){var t=c.value,a=n.rawData.subset(n.replicates.get(i).map((function(e){return"LFQ intensity ".concat(e)}))),o=n.rawData.subset(n.replicates.get(t).map((function(e){return"LFQ intensity ".concat(e)}))),d=Q.a.zip([].concat(Object(v.a)([i,t].map((function(e){return Q.a.zip(n.replicates.get(e).map((function(e){return n.data.getSeries("LFQ intensity ".concat(e))})),(function(e){return e.toArray()}))}))),[n.data.subset(["id"])]),(function(e){var n,s=Object(l.a)(e,3),c=s[0],r=s[1],u=s[2].id,d=q()(c).mean(),p=q()(r).mean(),b=G(c,r).p,O=function(e){return Object.values(e.at(u)).reduce((function(e,t){return 0!==Number(t)&&e++,e}),0)};return n={},Object(D.a)(n,"mean ".concat(i),d),Object(D.a)(n,"mean ".concat(t),p),Object(D.a)(n,"log FC",p-d),Object(D.a)(n,"p value",b),Object(D.a)(n,"N ".concat(i),O(a)),Object(D.a)(n,"N ".concat(t),O(o)),n})).withSeries(e.COMMON_COLUMNS.reduce((function(e,t){return Object.assign(e,Object(D.a)({},t,n.data.getSeries(t)))}),{})).withIndex(n.data.getIndex()).bake().withSeries({"adjusted p value":function(e){return new Q.b({index:e.getIndex(),values:$(e.getSeries("p value").toArray())})}}).bake().select((function(e){var n=Object(m.a)({},e);return n.significant=e["adjusted p value"]<=s&&Math.abs(e["log FC"])>=r&&(e["N ".concat(i)]>=u||e["N ".concat(t)]>=u)?"yes":"no",n})).bake();n.comparisons.get(i).set(t,d)};for(o.s();!(c=o.n()).done;)d()}catch(O){o.e(O)}finally{o.f()}},p=0,b=Object.entries(t);p<b.length;p++)d()}}]),e}();W.SNAPSHOT_KEYS={REMOVE_CONTAMINANTS:"REMOVE_CONTAMINANTS",LOG_TRANSFORM:"LOG_TRANSFORM",MEDIAN_NORMALIZATION:"MEDIAN_NORMALIZATION",IMPUTE_MISSING_VALUES:"IMPUTE_MISSING_VALUES"},W.COMMON_COLUMNS=["id","uniprotID","gene"],W.IMPUTATION_METHODS={METHOD_31:"METHOD_31",METHOD_46:"METHOD_46",METHOD_47:"METHOD_47"};var ee=W,te={LOG_VIOLIN:"LOG_VIOLIN",PRE_POST_IMPUTATION_VIOLIN:"PRE_POST_IMPUTATION_VIOLIN",PRE_POST_IMPUTATION_BOXPLOT:"PRE_POST_IMPUTATION_BOXPLOT",VOLCANO:"VOLCANO",P_VALUE_HISTOGRAM:"P_VALUE_HISTOGRAM"};function ne(e){var t=e.samples,n=e.conditions,i='\nfig, ax = reset()\ndata = await get_from_analysis("data")\n    ';return void 0!=t&&void 0==n?i+="\nsamples = [".concat(t.map((function(e){return'"'.concat(e,'"')})).join(),']\nx = data[lfq_col(samples)].values\nfiltered = [i[j] for i, j in zip(x.T, (~np.isnan(x)).T)]\n\nax.violinplot(filtered, vert=False)\nax.set_yticks(range(1, len(samples) + 1))\nax.set_yticklabels(samples)\nax.set_ylabel("sample")\nax.set_title("distribution of protein intensities by sample")\n        '):void 0==t&&void 0!=n&&(i+="\nconditions = [".concat(n.map((function(e){return'"'.concat(e,'"')})).join(),']\nreplicates = await get_from_analysis("replicates")\nx = [data[lfq_col(replicates[c])].values.flatten() for c in conditions]\nfiltered = [i[~np.isnan(i)] for i in x]\n\nax.violinplot(filtered, vert=False)\nax.set_yticks(range(1, len(conditions) + 1))\nax.set_yticklabels(conditions)\nax.set_ylabel("condition")\nax.set_title("distribution of protein intensities by condition")\n        ')),i+='\nax.set_xlabel("$\\log_2$ intensity")\nax.invert_yaxis()\nplt.tight_layout()\nshow()\n    '}function ie(e){var t=e.samples,n=e.conditions,i='\nfig, ax = reset()\ndata = await get_from_analysis("data_normalized")\nimputed = (await get_from_analysis("data_imputed"))[0]\n    ';return void 0!=t&&void 0==n?i+="\nsamples = [".concat(t.map((function(e){return'"'.concat(e,'"')})).join(),']\nx = data[lfq_col(samples)].values\nx_filtered = [i[j] for i, j in zip(x.T, (~np.isnan(x)).T)]\ny = imputed[lfq_col(samples)].values\ny_filtered = [i[j] for i, j in zip(y.T, (~np.isnan(y)).T)]\n\nv1 = ax.violinplot(x_filtered, vert=False)\nfor b in v1["bodies"]:\n    center = np.mean(b.get_paths()[0].vertices[:,1])\n    b.get_paths()[0].vertices[:, 1] = np.clip(b.get_paths()[0].vertices[:,1], -np.inf, center)\n\nv2 = ax.violinplot(y_filtered, vert=False)\nfor b in v2["bodies"]:\n    center = np.mean(b.get_paths()[0].vertices[:,1])\n    b.get_paths()[0].vertices[:, 1] = np.clip(b.get_paths()[0].vertices[:,1], center, np.inf)\n\nax.set_yticks(range(1, len(samples) + 1))\nax.set_yticklabels(samples)\nax.set_ylabel("sample")\nax.set_title("distribution of protein intensities by sample")\n        '):void 0==t&&void 0!=n&&(i+="\nconditions = [".concat(n.map((function(e){return'"'.concat(e,'"')})).join(),']\nreplicates = await get_from_analysis("replicates")\nx = [data[lfq_col(replicates[c])].values.flatten() for c in conditions]\nx_filtered = [i[~np.isnan(i)] for i in x]\ny = [imputed[lfq_col(replicates[c])].values.flatten() for c in conditions]\ny_filtered = [i[~np.isnan(i)] for i in y]\n\nv1 = ax.violinplot(x_filtered, vert=False)\nfor b in v1["bodies"]:\n    center = np.mean(b.get_paths()[0].vertices[:,1])\n    b.get_paths()[0].vertices[:, 1] = np.clip(b.get_paths()[0].vertices[:,1], -np.inf, center)\n\nv2 = ax.violinplot(y_filtered, vert=False)\nfor b in v2["bodies"]:\n    center = np.mean(b.get_paths()[0].vertices[:,1])\n    b.get_paths()[0].vertices[:, 1] = np.clip(b.get_paths()[0].vertices[:,1], center, np.inf)\n\nax.set_yticks(range(1, len(conditions) + 1))\nax.set_yticklabels(conditions)\nax.set_ylabel("condition")\nax.set_title("distribution of protein intensities by condition")\n        ')),i+='\nax.set_xlabel("$\\log_2$ intensity")\nax.invert_yaxis()\nax.legend([v1["bodies"][0], v2["bodies"][0]], ["pre-imputation", "post-imputation"])\nplt.tight_layout()\nshow()\n    '}function ae(e){var t=e.comparisons,n=e.highlightGenes;return'\nfig, ax = reset()\ndata = await get_from_analysis("data_comparisons")\ntable = data[("'.concat(t[0],'", "').concat(t[1],'")]\n\ngenes = [').concat((n||[]).map((function(e){return'"'.concat(e,'"')})).join(",\n    "),']\n\nproteomics.plotting.volcano(table, [\n    (set(table.index), {"color": "gray", "alpha": 0.1, "label": "_nolegend_"}, None),\n    (set(table[table["significant"]].index), {"color": "darkred", "alpha": 0.1, "label": "significant"}, None),\n    (set(genes), {"color": "tab:blue", "alpha": 0.8, "label": "_nolegend_"}, "gene")\n], ax=ax, interactive=True)\n\nax.set_xlabel("$\\log_2$ fold change")\nax.set_ylabel("$-\\log_{10} \\; p_{adjusted}$")\nax.set_title("').concat(t[1]," vs. ").concat(t[0],'")\nax.legend()\nplt.tight_layout()\nshow()\n    ')}function se(e){var t=e.comparisons;return'\nfig, ax = reset()\ndata = await get_from_analysis("data_comparisons")\ntable = data[("'.concat(t[0],'", "').concat(t[1],'")]\n\nax.hist(table["p"], bins=40, alpha=0.5, label="$p$-value")\nax.hist(table["p adjusted"], bins=40, alpha=0.5, label="adjusted $p$-value")\nax.set_xlabel("$p$")\nax.set_ylabel("Count")\nax.set_title("distribution of $p$-values for ').concat(t[1]," vs. ").concat(t[0],'")\nax.legend()\nplt.tight_layout()\nshow()\n    ')}function ce(e){return function(t){k(function(e){switch(e.type){case te.LOG_VIOLIN:return ne(e);case te.PRE_POST_IMPUTATION_VIOLIN:return ie(e);case te.VOLCANO:return ae(e);case te.P_VALUE_HISTOGRAM:return se(e)}}(e))}}var re=Object(o.b)(null,(function(e){return{onDataUpload:function(t){e(function(e){return function(t){new Response(e).arrayBuffer().then((function(e){return E("\nfrom js import raw_data\nimport io\n\ndata, samples = proteomics.io.import_maxquant(\n    io.BytesIO(raw_data.to_py()),\n    normalize=False\n)\nprint(data)\nprint(samples)\n                    ",{raw_data:e},[e])})).then((function(){return L("samples")})).then((function(e){t(h(p,e))}))}}(t))}}}))((function(e){var t=e.onDataUpload;return Object(i.jsxs)("div",{children:[Object(i.jsxs)("label",{htmlFor:"dataUpload",children:["(1) Select data to begin analysis:"," "]}),Object(i.jsx)("input",{type:"file",id:"dataUpload",name:"dataUpload",onInput:function(e){return t(e.target.files[0])}}),Object(i.jsx)("ul",{children:Object(i.jsx)("li",{children:"View log-transformed intensity distributions per sample as violin plot or boxplot."})})]})})),oe=n(150),le=n.n(oe);n(1830);le.a.setAppElement("#root");var ue=Object(o.b)((function(e){return{samples:e.input.samples}}),(function(e){return{onReplicatesSelect:function(t){e(function(e){return function(t){E("\nreplicates = {\n".concat(Object.entries(e).map((function(e){var t=Object(l.a)(e,2),n=t[0],i=t[1];return'    "'.concat(n,'": [').concat(i.map((function(e){return'"'.concat(e,'"')})),"]")})).join(",\n"),"\n}\n            ")).then((function(){t(h(b,Object.keys(e)))}))}}(t))}}}))((function(e){var t=e.samples,n=e.onReplicatesSelect,a=s.a.useState(!1),c=Object(l.a)(a,2),r=c[0],o=c[1],u=s.a.useState([]),d=Object(l.a)(u,2),p=d[0],b=d[1],O=s.a.useState(""),f=Object(l.a)(O,2),j=f[0],h=f[1],m=s.a.useState({}),v=Object(l.a)(m,2),g=v[0],x=v[1];return Object(i.jsxs)("div",{children:[Object(i.jsx)("span",{children:"(2) "}),Object(i.jsx)("button",{onClick:function(){return o(!0)},children:"Select replicates"}),Object(i.jsx)("ul",{children:Object(i.jsx)("li",{children:"View log-transformed intensity distributions per condition as violin plot or boxplot."})}),Object(i.jsxs)(le.a,{isOpen:r,id:"input-replicate-modal",style:{overlay:{zIndex:1e3}},children:[Object(i.jsx)("h1",{id:"input-replicate-modal-head",children:"Select replicates"}),Object(i.jsxs)("div",{id:"input-replicate-modal-left",children:[Object(i.jsx)("p",{children:"Samples present in data:"}),Object(i.jsx)("select",{multiple:!0,onChange:function(e){b(Array.from(e.target.selectedOptions).map((function(e){return e.value})))},children:t.map((function(e){return Object(i.jsx)("option",{value:e,children:e},e)}))})]}),Object(i.jsxs)("div",{children:[Object(i.jsx)("p",{children:"New condition wtih selected samples as replicates:"}),Object(i.jsx)("label",{htmlFor:"conditionName",children:"Condition name: "}),Object(i.jsx)("input",{type:"text",id:"conditionName",name:"conditionName",value:j,onChange:function(e){return h(e.target.value)}}),Object(i.jsx)("br",{}),Object(i.jsx)("button",{onClick:function(){0!==j.length&&(x(Object.assign({},g,Object(D.a)({},j,p))),h(""))},children:"Add condition"}),Object(i.jsx)("br",{}),Object(i.jsx)("hr",{style:{margin:"2rem"}}),Object(i.jsx)("button",{onClick:function(){return x({})},children:"Reset conditions"})]}),Object(i.jsxs)("div",{id:"input-replicate-modal-right",children:[Object(i.jsx)("p",{children:"Conditions and replicates:"}),Object(i.jsx)("div",{children:Object.entries(g).map((function(e){var t=Object(l.a)(e,2),n=t[0],a=t[1];return Object(i.jsxs)("p",{children:[n,": ",a.join(", ")]},n)}))})]}),Object(i.jsx)("div",{id:"input-replicate-modal-foot",children:Object(i.jsx)("button",{onClick:function(){n(g),o(!1)},children:"OK"})})]})]})}));n(1831);le.a.setAppElement("#root");var de=Object(o.b)((function(e){return{}}),(function(e){return{onImputeClick:function(t){e(function(e){return function(t){var n="";switch(n+=e.normalize?"\ndata_normalized = data.copy()\nmax_median = data[lfq_col(samples)].median(axis=0).max()\ndata_normalized[lfq_col(samples)] = data_normalized[lfq_col(samples)].apply(\n    lambda col: col * max_median / col.median(), axis=0\n)\n            ":"\ndata_normalized = data.copy()\n            ",n+="\ndata_imputed = []\nfor i in range(1):\n    df = data_normalized.copy()\n    for cond, reps in replicates.items():\n        ",e.method){case ee.IMPUTATION_METHODS.METHOD_31:n+="\n        df[lfq_col(reps)] = proteomics.imputation.impute_3_1(df[lfq_col(reps)])\n                ";break;case ee.IMPUTATION_METHODS.METHOD_46:n+="\n        df[lfq_col(reps)] = proteomics.imputation.impute_twostep(\n            proteomics.imputation.impute_4_6(df[lfq_col(reps)]),\n            proteomics.imputation.impute_3_1(df[lfq_col(reps)])\n        )\n                ";break;case ee.IMPUTATION_METHODS.METHOD_47:n+="\n        df[lfq_col(reps)] = proteomics.imputation.impute_twostep(\n            proteomics.imputation.impute_4_6(df[lfq_col(reps)], n_rep=1),\n            proteomics.imputation.impute_3_1(df[lfq_col(reps)])\n        )\n                "}E(n+="\n        data_imputed.append(df)\n        ")}}(t))}}}))((function(e){var t=e.onImputeClick,n=s.a.useState(!1),a=Object(l.a)(n,2),c=a[0],r=a[1],o=s.a.useState({normalize:!0,method:ee.IMPUTATION_METHODS.METHOD_31}),u=Object(l.a)(o,2),d=u[0],p=u[1];return Object(i.jsxs)("div",{children:[Object(i.jsx)("span",{children:"(3) "}),Object(i.jsx)("button",{onClick:function(){return r(!0)},children:"Preprocess and impute"}),Object(i.jsx)("ul",{children:Object(i.jsx)("li",{children:"View log-transformed intensity distributions before and after imputation as violin plot or boxplot."})}),Object(i.jsxs)(le.a,{isOpen:c,id:"input-imputation-modal",style:{overlay:{zIndex:1e3}},children:[Object(i.jsx)("h1",{id:"input-imputation-modal-head",children:"Imputation options"}),Object(i.jsxs)("div",{id:"input-imputation-modal-body",children:[Object(i.jsx)("h2",{children:"Pre-processing"}),Object(i.jsx)("input",{type:"checkbox",id:"normalizeMedians",checked:d.normalize,onChange:function(e){return p(Object.assign({},d,{normalize:e.target.checked}))}}),Object(i.jsx)("label",{htmlFor:"normalizeMedians",children:"Normalize medians"}),Object(i.jsx)("h2",{children:"Imputation"}),Object(i.jsxs)("select",{onChange:function(e){return p(Object.assign({},d,{method:e.currentTarget.value}))},children:[Object(i.jsx)("option",{value:ee.IMPUTATION_METHODS.METHOD_31,children:"method 3.1"}),Object(i.jsx)("option",{value:ee.IMPUTATION_METHODS.METHOD_46,children:"method 4.6"}),Object(i.jsx)("option",{value:ee.IMPUTATION_METHODS.METHOD_47,children:"method 4.7"})]})]}),Object(i.jsx)("div",{id:"input-replicate-modal-foot",children:Object(i.jsx)("button",{onClick:function(){t(d),r(!1)},children:"OK"})})]})]})}));n(1832);le.a.setAppElement("#root");var pe=Object(o.b)((function(e){return{conditions:e.input.conditions}}),(function(e){return{onComparisonSelect:function(t,n){e(function(e,t){return function(n){E("\ncomparisons = [\n".concat(Object.entries(e).map((function(e){var t=Object(l.a)(e,2),n=t[0];return t[1].map((function(e){return'    ("'.concat(n,'", "').concat(e,'"),')}))})).flat().join("\n"),"\n]\n\ndata_comparisons = proteomics.imputation.compare(\n    comparisons, \n    replicates, \n    data_normalized,\n    data_imputed,\n    sig_p=").concat(t.thresholdP,",\n    sig_fc=").concat(t.thresholdLogFC,",\n    sig_reps=").concat(t.thresholdReps,"\n)\n        ")).then((function(){n(h(O,e))}))}}(t,n))}}}))((function(e){var t=e.conditions,n=e.onComparisonSelect,a=s.a.useState(!1),c=Object(l.a)(a,2),r=c[0],o=c[1],u=s.a.useState(.05),d=Object(l.a)(u,2),p=d[0],b=d[1],O=s.a.useState(1),f=Object(l.a)(O,2),j=f[0],h=f[1],g=s.a.useState(2),x=Object(l.a)(g,2),_=x[0],y=x[1],N=s.a.useState({}),S=Object(l.a)(N,2),T=S[0],M=S[1];return Object(i.jsxs)("div",{children:[Object(i.jsx)("span",{children:"(4) "}),Object(i.jsx)("button",{onClick:function(){return o(!0)},children:"Select comparisons"}),Object(i.jsxs)("ul",{children:[Object(i.jsx)("li",{children:"View enriched and depleted proteins per comparison as volcano plot."}),Object(i.jsx)("li",{children:"View distribution of p values and adjusted p values."}),Object(i.jsx)("li",{children:"View mean intensities, log fold changes, p values as data table."})]}),Object(i.jsxs)(le.a,{isOpen:r,id:"input-comparison-modal",style:{overlay:{zIndex:1e3}},children:[Object(i.jsx)("h1",{id:"input-comparison-modal-head",children:"Select comparisons"}),Object(i.jsx)("table",{children:Object(i.jsxs)("tbody",{children:[Object(i.jsxs)("tr",{children:[Object(i.jsx)("td",{}),t.map((function(e){return Object(i.jsx)("td",{children:e},"".concat(e," B"))}))]}),t.map((function(e){return Object(i.jsxs)("tr",{children:[Object(i.jsx)("td",{children:e},"".concat(e," A")),t.map((function(t){return Object(i.jsx)("td",{children:Object(i.jsx)("input",{type:"checkbox",onChange:function(n){return function(e,t,n){var i=Object(m.a)({},T);n?(i[e]=Object(v.a)(i[e]||[]),i[e].includes(t)||i[e].push(t)):e in i&&i[e].includes(t)&&(i[e]=Object(v.a)(i[e]).splice(i[e].indexOf(t),1)),M(i)}(e,t,n.target.checked)},disabled:e===t})},"".concat(e,",").concat(t))}))]},"".concat(e," row"))}))]})}),Object(i.jsxs)("div",{children:[Object(i.jsx)("label",{htmlFor:"threshold-p",children:"Significant p-value: "}),Object(i.jsx)("input",{type:"number",step:"any",min:0,value:p,onChange:function(e){return b(e.target.value)},id:"threshold-p"}),Object(i.jsx)("br",{}),Object(i.jsxs)("label",{htmlFor:"threshold-logfc",children:["Significant log fold change:"," "]}),Object(i.jsx)("input",{type:"number",step:"any",min:0,value:j,onChange:function(e){return h(e.target.value)},id:"threshold-logfc"}),Object(i.jsx)("br",{}),Object(i.jsxs)("label",{htmlFor:"threshold-reps",children:["Significant number of replicates:"," "]}),Object(i.jsx)("input",{type:"number",step:1,min:0,value:_,onChange:function(e){return y(e.target.value)},id:"threshold-reps"})]}),Object(i.jsx)("div",{id:"input-comparison-modal-foot",children:Object(i.jsx)("button",{onClick:function(){n(T,{thresholdP:p,thresholdLogFC:j,thresholdReps:_}),o(!1)},children:"OK"})})]})]})}));var be=function(e){var t=e.id;return Object(i.jsxs)("div",{id:t,className:"input-container",children:[Object(i.jsx)(re,{}),Object(i.jsx)(ue,{}),Object(i.jsx)(de,{}),Object(i.jsx)(pe,{})]})},Oe=n(965),fe=n(970),je=(n(1833),n.p+"static/media/init_figure.ba7bfc03.py"),he=function(e){Object(Oe.a)(n,e);var t=Object(fe.a)(n);function n(){var e;return Object(H.a)(this,n),(e=t.call(this)).state={content:"Loading..."},e}return Object(V.a)(n,[{key:"componentDidMount",value:function(){var e=this;w.then((function(){return fetch(je)})).then((function(e){return e.text()})).then((function(e){return A().runPythonAsync(e)})).then((function(){e.setState({content:null})}))}},{key:"render",value:function(){var e=this.props.id;return Object(i.jsxs)("div",{id:e,children:[this.state.content,Object(i.jsx)("div",{id:"figure-div"})]})}}]),n}(s.a.Component),me=Object(o.b)((function(e){return{}}),null)(he),ve=(n(1836),n(966)),ge=n.n(ve);n(2076);var xe=Object(o.b)(null,null)((function(e){var t=e.index,n=e.context,a=e.code,s=e.results,c=e.error;return Object(i.jsxs)("div",{className:"repl-block",children:[Object(i.jsxs)("span",{children:["[",t,"]: ",n]}),Object(i.jsx)("pre",{className:"repl-code",children:a}),s?Object(i.jsx)("pre",{className:"repl-results",children:s}):null,c?Object(i.jsx)("pre",{className:"repl-error",children:c}):null]})}));var _e=Object(o.b)((function(e){return{figureOptions:e.view.figureOptions,replLog:e.repl}}),null)((function(e){var t,n=e.id,a=(e.samples,e.figureOptions),c=e.replLog,r=s.a.useState("table"),o=Object(l.a)(r,2),u=o[0],d=o[1],p=s.a.useState(),b=Object(l.a)(p,2),O=b[0],f=b[1],j=s.a.useState(""),h=Object(l.a)(j,2),m=h[0],v=h[1];switch(s.a.useEffect(Object(U.a)(F.a.mark((function e(){return F.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:a.comparisons&&(t=a.comparisons,E('\ntable = data_comparisons[("'.concat(t[0],'", "').concat(t[1],'")].fillna("").assign(significant=lambda df: df["significant"].apply(str)).to_dict("records")\n        ')).then((function(){return L("table")})).then((function(e){return e.map((function(e){return Object.fromEntries(e)}))}))).then((function(e){f(e)}));case 1:case"end":return e.stop()}var t}),e)}))),[a.comparisons]),u){case"table":t=Object(i.jsx)(ge.a,{title:a.comparisons?"".concat(a.comparisons[1]," vs. ").concat(a.comparisons[0]):"",data:O,columns:O?Object.keys(O[0]):[],options:{selectableRows:"none"}});break;case"repl":t=Object(i.jsxs)("div",{className:"repl",children:[Object(i.jsx)("div",{className:"repl-output",children:c.map((function(e){return Object(i.jsx)(xe,{index:e.index,context:e.context,code:e.code,results:e.results,error:e.error},e.index)}))}),Object(i.jsxs)("div",{className:"repl-input",children:[Object(i.jsx)("textarea",{className:"repl-inputbox",rows:5,value:m,onChange:function(e){return v(e.target.value)}}),Object(i.jsxs)("div",{className:"repl-inputrun",children:[Object(i.jsx)("button",{className:"repl-runworker",onClick:function(){return E(m)},children:"run in worker"}),Object(i.jsx)("button",{className:"repl-runfigure",onClick:function(){return k(m)},children:"run in figure"})]})]})]})}return Object(i.jsxs)("div",{id:n,className:"sidepanel-container",children:[Object(i.jsx)("div",{className:"sidepanel-top",children:t}),Object(i.jsxs)("div",{className:"sidepanel-bottom",children:[Object(i.jsx)("span",{className:"tab"+("table"===u?" tab-selected":""),onClick:function(){return d("table")},children:"table"}),Object(i.jsx)("span",{className:"tab"+("repl"===u?" tab-selected":""),onClick:function(){return d("repl")},children:"REPL"})]})]})}));n(2077);var ye=Object(o.b)((function(e){return{samples:e.input.samples,conditions:e.input.conditions,comparisons:e.input.comparisons}}),null)((function(e){var t,n=e.samples,a=e.conditions,c=e.comparisons,r=e.figureType,o=e.onOptionsChange,u=s.a.useState("samples"),d=Object(l.a)(u,2),p=d[0],b=d[1];switch(r){case te.LOG_VIOLIN:case te.PRE_POST_IMPUTATION_VIOLIN:case te.PRE_POST_IMPUTATION_BOXPLOT:var O=function(e){b(e.currentTarget.value),o({samples:void 0,conditions:void 0})};t=Object(i.jsxs)(i.Fragment,{children:[Object(i.jsxs)("div",{children:[Object(i.jsx)("input",{type:"radio",id:"figureTypeSamples",name:"figureType",value:"samples",checked:"samples"===p,onChange:O}),Object(i.jsx)("label",{htmlFor:"figureTypeSamples",children:"Samples"}),Object(i.jsx)("br",{}),Object(i.jsx)("input",{type:"radio",id:"figureTypeConditions",name:"figureType",value:"conditions",checked:"conditions"===p,onChange:O}),Object(i.jsx)("label",{htmlFor:"figureTypeConditions",children:"Conditions"})]}),Object(i.jsx)("select",{className:"sample-condition-selector",multiple:!0,onChange:function(e){o(Object(D.a)({},p,Array.from(e.target.selectedOptions).map((function(e){return e.value}))))},children:{samples:n,conditions:a}[p].map((function(e){return Object(i.jsx)("option",{value:e,children:e},e)}))})]});break;case te.VOLCANO:case te.P_VALUE_HISTOGRAM:t=Object(i.jsxs)(i.Fragment,{children:[Object(i.jsx)("select",{className:"comparison-selector",multiple:!0,onChange:function(e){o({comparisons:JSON.parse(e.target.value)})},children:Object.entries(c||{}).map((function(e){var t=Object(l.a)(e,2),n=t[0];return t[1].map((function(e){return Object(i.jsxs)("option",{value:JSON.stringify([n,e]),children:[e," vs. ",n]},JSON.stringify([n,e]))}))})).flat()}),Object(i.jsx)("textarea",{className:"highlight-genes-textbox",placeholder:"highlight genes in volcano plot (case insensitive); one gene per line",onChange:function(e){return o({highlightGenes:e.target.value.split("\n").filter((function(e){return""!==e}))})}})]})}return Object(i.jsx)("div",{className:"figure-sample-condition-selector",children:t})}));n(2078);var Ne=Object(o.b)(null,(function(e){return{onOptionsSet:function(t){e(ce(t)),e(h(f,t))}}}))((function(e){var t=e.id,n=e.onOptionsSet,a=s.a.useState({}),c=Object(l.a)(a,2),r=c[0],o=c[1];return Object(i.jsxs)("div",{id:t,className:"view-container",children:[Object(i.jsx)("p",{children:"Select data to view."}),Object(i.jsxs)("div",{className:"figure-options",children:[Object(i.jsx)("select",{onChange:function(e){o(Object.assign({},r,{type:e.target.value}))},defaultValue:"default",children:[Object(i.jsx)("option",{disabled:!0,value:"default",children:"-- select an option --"},"default")].concat(Object(v.a)(Object.keys(te).map((function(e){return Object(i.jsx)("option",{value:e,children:e},e)}))))}),Object(i.jsx)(ye,{figureType:r.type,onOptionsChange:function(e){return o(Object.assign({},r,e))}}),Object(i.jsx)("button",{onClick:function(){return n(r)},children:"View data"})]})]})}));var Se=function(){return Object(i.jsxs)("div",{id:"app-container",children:[Object(i.jsx)(be,{id:"input-container"}),Object(i.jsx)(Ne,{id:"view-container"}),Object(i.jsx)(_e,{id:"sidepanel-container"}),Object(i.jsx)(me,{id:"mainpanel-container"})]})};r.a.render(Object(i.jsx)(s.a.StrictMode,{children:Object(i.jsx)(o.a,{store:M,children:Object(i.jsx)(Se,{})})}),document.getElementById("root"))},987:function(e,t,n){},989:function(e,t,n){},990:function(e,t,n){}},[[2084,1,2]]]);
//# sourceMappingURL=main.f874eea9.chunk.js.map